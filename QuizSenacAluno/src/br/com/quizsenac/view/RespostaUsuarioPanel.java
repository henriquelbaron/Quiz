/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.quizsenac.view;

import br.com.quizsenac.bens.Pergunta;
import br.com.quizsenac.bens.Resposta;
import br.com.quizsenac.bens.Usuario;
import br.com.quizsenac.bens.UsuarioResposta;
import br.com.quizsenac.teste;
import java.awt.EventQueue;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.application.Platform;
import javafx.beans.property.BooleanProperty;
import javafx.beans.property.SimpleBooleanProperty;
import javafx.concurrent.Task;
import javax.swing.SwingConstants;
import javax.swing.Timer;

/**
 *
 * @author ACER
 */
public class RespostaUsuarioPanel extends javax.swing.JPanel {

    /**
     * Creates new form RespostaUsuarioPanel
     */
    private static Resposta vermelho;
    private static Resposta azul;
    private static Resposta amarelo;
    private static Resposta verde;
    private Pergunta PERGUNTA;
    private static UsuarioResposta usuarioResposta;
    private BooleanProperty stop = new SimpleBooleanProperty(false);

    public RespostaUsuarioPanel(Pergunta p) {
        initComponents();
        iniciaCronometro();
        labelCronometro.setHorizontalTextPosition(SwingConstants.CENTER);

                


//        Pergunta pergunta = new Pergunta();
//        usuarioResposta.setPergunta(pergunta);
//
//        Usuario usuario = new Usuario();
//        usuario.setNome("Henrique");
//        usuarioResposta.setUsuario(usuario);
//
//        List<Resposta> respostas = pergunta.getRespostas();
//        labelPergunta.setText(pergunta.getPergunta());
//        for (int i = 0; i < respostas.size(); i++) {
//            vermelho = respostas.get(0);
//            azul = respostas.get(1);
//            amarelo = respostas.get(2);
//            verde = respostas.get(3);
//        }
//        bVermelho.setText(vermelho.getResposta());
//        bAzul.setText(azul.getResposta());
//        bAmarelo.setText(amarelo.getResposta());
//        bVerde.setText(verde.getResposta());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        labelPergunta = new javax.swing.JLabel();
        bAmarelo = new javax.swing.JButton();
        bAzul = new javax.swing.JButton();
        bVerde = new javax.swing.JButton();
        bVermelho = new javax.swing.JButton();
        labelCronometro = new javax.swing.JLabel();

        jButton1.setText("jButton1");

        labelPergunta.setFont(new java.awt.Font("Berlin Sans FB", 0, 30)); // NOI18N

        bAmarelo.setBackground(new java.awt.Color(204, 204, 0));
        bAmarelo.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        bAmarelo.setText("Amarelo");
        bAmarelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAmareloActionPerformed(evt);
            }
        });

        bAzul.setBackground(new java.awt.Color(0, 153, 255));
        bAzul.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        bAzul.setText("Azul");
        bAzul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAzulActionPerformed(evt);
            }
        });

        bVerde.setBackground(new java.awt.Color(102, 255, 51));
        bVerde.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        bVerde.setText("Verde");
        bVerde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bVerdeActionPerformed(evt);
            }
        });

        bVermelho.setBackground(new java.awt.Color(255, 51, 51));
        bVermelho.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        bVermelho.setText("Vermelho");
        bVermelho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bVermelhoActionPerformed(evt);
            }
        });

        labelCronometro.setFont(new java.awt.Font("Berlin Sans FB", 0, 30)); // NOI18N
        labelCronometro.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bVermelho, javax.swing.GroupLayout.DEFAULT_SIZE, 591, Short.MAX_VALUE)
                            .addComponent(bAmarelo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bVerde, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bAzul, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(labelPergunta, javax.swing.GroupLayout.PREFERRED_SIZE, 914, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(labelCronometro, javax.swing.GroupLayout.PREFERRED_SIZE, 924, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(labelPergunta, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(labelCronometro, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bAzul, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bVermelho, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bVerde, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bAmarelo, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
                            

    private void bVermelhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bVermelhoActionPerformed
        verdadeira(vermelho);
        teste.abrirTeladeEspera();
     }//GEN-LAST:event_bVermelhoActionPerformed

    private void bAzulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAzulActionPerformed
        verdadeira(azul);
        teste.abrirTeladeEspera();
    }//GEN-LAST:event_bAzulActionPerformed

    private void bAmareloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAmareloActionPerformed
        verdadeira(amarelo);
        teste.abrirTeladeEspera();
    }//GEN-LAST:event_bAmareloActionPerformed

    private void bVerdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bVerdeActionPerformed
        verdadeira(verde);
        teste.abrirTeladeEspera();
    }//GEN-LAST:event_bVerdeActionPerformed

    private void verdadeira(Resposta resposta) {
        usuarioResposta.setResposta(resposta);
        usuarioResposta.setTempo(ERROR);
        if (resposta.getCorreta()) {
            usuarioResposta.setPontos(200);
        }
    }

    private void iniciaCronometro() {
        Integer intervaloMilissegundos = 1000;
        Runnable runner = new Runnable() {
            Timer timer;

            public void run() {
                ActionListener actionListener = new ActionListener() {
                    private int contador = 60;

                    @Override
                    public void actionPerformed(ActionEvent event) {
                        if (contador == 0) {
                            // para o timer
                            timer.stop();
                            labelCronometro.setText("Tempo esgotado!");
                        } else {
                            labelCronometro.setText(String.format("%d restantes.", contador));

                        }
                        contador--;
                    }
                };

                // executa o actionListener a cada 1000 ms
                timer = new Timer(intervaloMilissegundos, actionListener);
                timer.setInitialDelay(0);
                timer.start();
            }
        };

        EventQueue.invokeLater(runner);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAmarelo;
    private javax.swing.JButton bAzul;
    private javax.swing.JButton bVerde;
    private javax.swing.JButton bVermelho;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel labelCronometro;
    private javax.swing.JLabel labelPergunta;
    // End of variables declaration//GEN-END:variables
}
